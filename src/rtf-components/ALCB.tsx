/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 /home/dusan/Downloads/AsterChair4/ALCB.gltf
*/

import React, { useMemo, useRef } from 'react';
import { useGLTF, useTexture } from '@react-three/drei';
import { ColorRepresentation, MirroredRepeatWrapping } from 'three';
import { RepeatWrapping } from 'three';
import { WrapAroundEnding } from 'three';
import { MeshStandardMaterial } from 'three';
import { useProductStore } from '../store';
import { useLoader } from '@react-three/fiber';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';

export function Model(props: any) {
	const gltf = useLoader(GLTFLoader, '/ro.glb');

	// Use useMemo to only set shadows on initial load.
	useMemo(() => {
		gltf.scene.traverse((node:any) => {
			if (node?.isMesh) {
				node.castShadow = true;
			}
		});
	}, [gltf]);

	return (
		<mesh castShadow receiveShadow name="meshStandardMaterial">
			<primitive object={gltf.scene} />
		</mesh>
	);
}
